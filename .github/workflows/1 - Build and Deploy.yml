name: Build and Deploy .NET 8 Lambda Functions

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOTNET_ROOT: /usr/share/dotnet
      DOTNET_CLI_TELEMETRY_OPTOUT: 1

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Build .NET Lambda functions
        run: |
          for dir in $(find ./app -mindepth 1 -maxdepth 1 -type d); do
            function_name=$(basename $dir)
            dotnet publish "$dir" -c Release -o "out/$function_name" -r linux-x64 --self-contained false
          done

      - name: Upload Lambda artifacts
        uses: actions/upload-artifact@v3
        with:
          name: lambda-artifacts
          path: out

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download Lambda artifacts
        uses: actions/download-artifact@v3
        with:
          name: lambda-artifacts
          path: out

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Install Terraform
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update && sudo apt-get install terraform

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  # Change this to your desired region

      - name: Initialize Terraform with S3 backend
        working-directory: ./terraform
        run: |
          terraform init -backend-config="bucket=${{ secrets.TF_S3_BUCKET }}" \
                         -backend-config="key=${{ secrets.TF_S3_KEY }}" \
                         -backend-config="region=${{ secrets.AWS_REGION }}" \
                         -backend-config="access_key=${{ secrets.AWS_ACCESS_KEY_ID }}" \
                         -backend-config="secret_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}"

      - name: Apply Terraform configuration
        working-directory: ./terraform
        run: terraform apply -auto-approve
